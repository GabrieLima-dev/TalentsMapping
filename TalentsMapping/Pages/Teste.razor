@page "/teste"
@inject PerguntaService PerguntaService

<h3>Teste Vocacional</h3>

@if (perguntas == null)
{
    <p>Carregando perguntas...</p>
}
else
{
    <EditForm Model="@respostas">
        @foreach (var pergunta in perguntas)
        {
            <div>
                <p>@pergunta.texto</p>
                @foreach (var alternativa in pergunta.alternativas)
                {
                    <InputRadioGroup @bind-Value="respostas[pergunta.id]">
                        <InputRadio Value="@alternativa.valor" />
                        <label>@alternativa.texto</label>
                    </InputRadioGroup>
                }
            </div>
        }
        <button @onclick="EnviarRespostas">Enviar</button>
    </EditForm>
}

@code {
    private List<Pergunta> perguntas;
    private Dictionary<int, int> respostas = new Dictionary<int, int>();

    protected override async Task OnInitializedAsync()
    {
        perguntas = await PerguntaService.GetPerguntasAsync();
        foreach (var pergunta in perguntas)
        {
            respostas[pergunta.id] = 0;  // Inicializa o valor de resposta para cada pergunta
        }
    }

    private void EnviarRespostas()
    {
        // Lógica para processar as respostas e calcular o resultado do teste
    }
}
